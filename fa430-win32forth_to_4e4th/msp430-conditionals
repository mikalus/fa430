\ : NEVER         DROP FALSE ;



\ ----- assembler conditionals
multi constant
   2000 =?     2400 <>?      2800 CS?    2C00 CC?
   3000 POS?   3400 >?       3800 <EQ?   3C00 NEVER
   2800 U<EQ?  2C00 U>?       3FF <OFFSET>
   0055 CODE-ID   0066 IF,ID  0077 BEGIN,ID   \\

\ <offset>     = masker for offset -> then and until
\ never        = cond for always.jump -> ahead, again
\              = masker for condition -> see ?cond

: ?PAIR ( x y -- )   - abort"  Conditionals not paired. " ;
: ?COND ( cond -- )  never invert and        \ niet waterdicht
                     abort"  Condition needed. " ;

: IF, ( cond -- ifloc ifcond ) dup ?cond if,id  or here swap  2 allot ;
: BEGIN, ( -- beginloc begin,id )  here begin,id ;
: THEN, ( ifloc ifcond -- )
   dup   never invert and  if,id ?pair
   never and   dup ?cond   >r
   here over 2 + - 2/ <offset> and  r> or    swap x! ;
: UNTIL, ( beginloc begin,id cond -- )
   dup ?cond   >r     begin,id ?pair
   here 2 + - 2/ <offset> and    r> or    x, ;
: AGAIN,    never until, ;
: ELSE,     never if, 2swap then, ;
: WHILE,    if, 2swap ;
: REPEAT,   never until, then, ;
: AHEAD,    never if, ;
: JMP       begin,id again, ;  \ jump, relative addr in opcode
